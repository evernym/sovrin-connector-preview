// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProofModal /> should match snapshot when proof sent fail 1`] = `
<Modal
  animationIn="zoomIn"
  animationOut="zoomOut"
  animationOutTiming={100}
  backdropColor="#ffffff"
  backdropOpacity={1}
  hideModalContentWhileAnimating={true}
  isVisible={false}
  onModalHide={[Function]}
  useNativeDriver={true}
>
  <View
    fifth={true}
    shadow={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "elevation": 10,
        "marginHorizontal": 10,
        "shadowColor": "rgba(0, 0, 0, 0.2)",
        "shadowOffset": Object {
          "height": 10,
          "width": 0,
        },
        "shadowOpacity": 1,
        "shadowRadius": 30,
      }
    }
  >
    <View
      spaceBetween={true}
      style={
        Object {
          "borderBottomColor": "#3f3f3f",
          "borderBottomWidth": 0.2,
          "justifyContent": "space-between",
          "paddingVertical": 10,
        }
      }
    >
      <View
        accessibilityLabel="send-proof-text-avatars-container"
        accessible={true}
        row={true}
        spaceBetween={true}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginHorizontal": 10,
            "marginVertical": 10,
          }
        }
        testID="send-proof-text-avatars-container"
        vCenter={true}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={undefined}
          testID={undefined}
        >
          <View
            accessibilityLabel="avatars-pair-avatars-invitee"
            accessible={true}
            imageShadow="imageShadow"
            style={
              Object {
                "borderRadius": 38,
                "elevation": 3,
                "shadowColor": "rgba(0, 0, 0, 0.25)",
                "shadowOffset": Object {
                  "height": 3,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
            testID="avatars-pair-avatars-invitee"
          >
            <Image
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hitSlop={undefined}
              nativeID={undefined}
              onError={undefined}
              onLayout={undefined}
              onLoad={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              source={
                Object {
                  "uri": "/var/application/DocumentDir/user-avatar.jpeg",
                }
              }
              style={
                Array [
                  Object {
                    "height": 76,
                    "width": 76,
                  },
                  Object {
                    "borderRadius": 38,
                  },
                ]
              }
              testID={undefined}
            />
          </View>
        </View>
        <Image
          accessibilityLabel="send-proof-check-mark"
          accessible={true}
          source={1}
          style={
            Array [
              Object {
                "height": 22,
                "width": 30,
              },
              Object {
                "height": 20,
                "right": 7,
                "width": 80,
                "zIndex": -1,
              },
            ]
          }
          testID="send-proof-check-mark"
        />
        <View
          accessibilityLabel="send-proof-text-avatars-inviter"
          accessible={true}
          imageShadow="imageShadow"
          style={
            Object {
              "borderRadius": 38,
              "elevation": 3,
              "shadowColor": "rgba(0, 0, 0, 0.25)",
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
          testID="send-proof-text-avatars-inviter"
        >
          <Image
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            nativeID={undefined}
            onError={undefined}
            onLayout={undefined}
            onLoad={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            source={
              Object {
                "uri": "http://testissuer.com/logoUrl.png",
              }
            }
            style={
              Array [
                Object {
                  "height": 76,
                  "width": 76,
                },
                Object {
                  "borderRadius": 38,
                },
              ]
            }
            testID={undefined}
          />
        </View>
      </View>
      <Text
        accessibilityLabel="send-proof-message"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 15,
            },
            Object {
              "fontFamily": "Lato",
            },
            Object {
              "backgroundColor": "#ffffff",
              "color": "#777777",
            },
            Object {
              "fontWeight": "600",
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            Object {
              "marginBottom": 5,
              "paddingTop": 10,
            },
          ]
        }
        testID="send-proof-message"
      >
        Successfully Sent
      </Text>
      <Text
        accessibilityLabel="proof-verify-name"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 17,
            },
            Object {
              "fontFamily": "Lato",
            },
            Object {
              "backgroundColor": "#ffffff",
              "color": "#777777",
            },
            Object {
              "fontWeight": "bold",
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            Object {
              "marginBottom": 10,
            },
          ]
        }
        testID="proof-verify-name"
      >
        Home Address
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
          Object {
            "marginLeft": 0,
            "marginRight": 0,
          },
          undefined,
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel="send-proof-success-continue"
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID="send-proof-success-continue"
        tvParallaxProperties={undefined}
      >
        <View
          pointerEvents="box-only"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#9E9E9E",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 19,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "backgroundColor": "#ffffff",
              },
              undefined,
              Object {
                "padding": 12,
              },
              undefined,
              undefined,
              undefined,
              Array [
                null,
              ],
              Object {
                "backgroundColor": "#dadee0",
              },
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                },
                Object {
                  "opacity": 0.4,
                },
              ],
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#4A8FE3",
                  },
                  Object {
                    "fontSize": 14,
                  },
                  undefined,
                  Object {
                    "fontWeight": "bold",
                  },
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            Continue
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`<ProofModal /> should match snapshot when proof sent success 1`] = `
<Modal
  animationIn="zoomIn"
  animationOut="zoomOut"
  animationOutTiming={100}
  backdropColor="#ffffff"
  backdropOpacity={1}
  hideModalContentWhileAnimating={true}
  isVisible={true}
  onModalHide={[Function]}
  useNativeDriver={true}
>
  <View
    fifth={true}
    shadow={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "elevation": 10,
        "marginHorizontal": 10,
        "shadowColor": "rgba(0, 0, 0, 0.2)",
        "shadowOffset": Object {
          "height": 10,
          "width": 0,
        },
        "shadowOpacity": 1,
        "shadowRadius": 30,
      }
    }
  >
    <View
      spaceBetween={true}
      style={
        Object {
          "borderBottomColor": "#3f3f3f",
          "borderBottomWidth": 0.2,
          "justifyContent": "space-between",
          "paddingVertical": 10,
        }
      }
    >
      <View
        accessibilityLabel="send-proof-text-avatars-container"
        accessible={true}
        row={true}
        spaceBetween={true}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginHorizontal": 10,
            "marginVertical": 10,
          }
        }
        testID="send-proof-text-avatars-container"
        vCenter={true}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={undefined}
          testID={undefined}
        >
          <View
            accessibilityLabel="avatars-pair-avatars-invitee"
            accessible={true}
            imageShadow="imageShadow"
            style={
              Object {
                "borderRadius": 38,
                "elevation": 3,
                "shadowColor": "rgba(0, 0, 0, 0.25)",
                "shadowOffset": Object {
                  "height": 3,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
            testID="avatars-pair-avatars-invitee"
          >
            <Image
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hitSlop={undefined}
              nativeID={undefined}
              onError={undefined}
              onLayout={undefined}
              onLoad={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              source={
                Object {
                  "uri": "/var/application/DocumentDir/user-avatar.jpeg",
                }
              }
              style={
                Array [
                  Object {
                    "height": 76,
                    "width": 76,
                  },
                  Object {
                    "borderRadius": 38,
                  },
                ]
              }
              testID={undefined}
            />
          </View>
        </View>
        <Image
          accessibilityLabel="send-proof-check-mark"
          accessible={true}
          source={1}
          style={
            Array [
              Object {
                "height": 22,
                "width": 30,
              },
              null,
            ]
          }
          testID="send-proof-check-mark"
        />
        <View
          accessibilityLabel="send-proof-text-avatars-inviter"
          accessible={true}
          imageShadow="imageShadow"
          style={
            Object {
              "borderRadius": 38,
              "elevation": 3,
              "shadowColor": "rgba(0, 0, 0, 0.25)",
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
          testID="send-proof-text-avatars-inviter"
        >
          <Image
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            nativeID={undefined}
            onError={undefined}
            onLayout={undefined}
            onLoad={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            source={
              Object {
                "uri": "http://testissuer.com/logoUrl.png",
              }
            }
            style={
              Array [
                Object {
                  "height": 76,
                  "width": 76,
                },
                Object {
                  "borderRadius": 38,
                },
              ]
            }
            testID={undefined}
          />
        </View>
      </View>
      <Text
        accessibilityLabel="send-proof-message"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 15,
            },
            Object {
              "fontFamily": "Lato",
            },
            Object {
              "backgroundColor": "#ffffff",
              "color": "#777777",
            },
            Object {
              "fontWeight": "600",
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            Object {
              "marginBottom": 5,
              "paddingTop": 10,
            },
          ]
        }
        testID="send-proof-message"
      >
        Successfully Sent
      </Text>
      <Text
        accessibilityLabel="proof-verify-name"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 17,
            },
            Object {
              "fontFamily": "Lato",
            },
            Object {
              "backgroundColor": "#ffffff",
              "color": "#777777",
            },
            Object {
              "fontWeight": "bold",
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            Object {
              "marginBottom": 10,
            },
          ]
        }
        testID="proof-verify-name"
      >
        Home Address
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
          Object {
            "marginLeft": 0,
            "marginRight": 0,
          },
          undefined,
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel="send-proof-success-continue"
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID="send-proof-success-continue"
        tvParallaxProperties={undefined}
      >
        <View
          pointerEvents="box-only"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#9E9E9E",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 19,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "backgroundColor": "#ffffff",
              },
              undefined,
              Object {
                "padding": 12,
              },
              undefined,
              undefined,
              undefined,
              Array [
                null,
              ],
              false,
              false,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#4A8FE3",
                  },
                  Object {
                    "fontSize": 14,
                  },
                  undefined,
                  Object {
                    "fontWeight": "bold",
                  },
                  undefined,
                  undefined,
                  false,
                ],
              ]
            }
          >
            Continue
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`<ProofModal /> should match snapshot when sending proof 1`] = `
<Modal
  animationIn="zoomIn"
  animationOut="zoomOut"
  animationOutTiming={100}
  backdropColor="#ffffff"
  backdropOpacity={1}
  hideModalContentWhileAnimating={true}
  isVisible={true}
  onModalHide={[Function]}
  useNativeDriver={true}
>
  <View
    fifth={true}
    shadow={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "elevation": 10,
        "marginHorizontal": 10,
        "shadowColor": "rgba(0, 0, 0, 0.2)",
        "shadowOffset": Object {
          "height": 10,
          "width": 0,
        },
        "shadowOpacity": 1,
        "shadowRadius": 30,
      }
    }
  >
    <View
      spaceBetween={true}
      style={
        Object {
          "borderBottomColor": "#3f3f3f",
          "borderBottomWidth": 0.2,
          "justifyContent": "space-between",
          "paddingVertical": 10,
        }
      }
    >
      <View
        accessibilityLabel="send-proof-text-avatars-container"
        accessible={true}
        row={true}
        spaceBetween={true}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginHorizontal": 10,
            "marginVertical": 10,
          }
        }
        testID="send-proof-text-avatars-container"
        vCenter={true}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={undefined}
          testID={undefined}
        >
          <View
            accessibilityLabel="avatars-pair-avatars-invitee"
            accessible={true}
            imageShadow="imageShadow"
            style={
              Object {
                "borderRadius": 38,
                "elevation": 3,
                "shadowColor": "rgba(0, 0, 0, 0.25)",
                "shadowOffset": Object {
                  "height": 3,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 8,
              }
            }
            testID="avatars-pair-avatars-invitee"
          >
            <Image
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hitSlop={undefined}
              nativeID={undefined}
              onError={undefined}
              onLayout={undefined}
              onLoad={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              source={
                Object {
                  "uri": "/var/application/DocumentDir/user-avatar.jpeg",
                }
              }
              style={
                Array [
                  Object {
                    "height": 76,
                    "width": 76,
                  },
                  Object {
                    "borderRadius": 38,
                  },
                ]
              }
              testID={undefined}
            />
          </View>
        </View>
        <Image
          accessibilityLabel="send-proof-check-mark"
          accessible={true}
          source={1}
          style={
            Array [
              Object {
                "height": 22,
                "width": 30,
              },
              Object {
                "height": 20,
                "right": 7,
                "width": 80,
                "zIndex": -1,
              },
            ]
          }
          testID="send-proof-check-mark"
        />
        <View
          accessibilityLabel="send-proof-text-avatars-inviter"
          accessible={true}
          imageShadow="imageShadow"
          style={
            Object {
              "borderRadius": 38,
              "elevation": 3,
              "shadowColor": "rgba(0, 0, 0, 0.25)",
              "shadowOffset": Object {
                "height": 3,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
          testID="send-proof-text-avatars-inviter"
        >
          <Image
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            nativeID={undefined}
            onError={undefined}
            onLayout={undefined}
            onLoad={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            source={
              Object {
                "uri": "http://testissuer.com/logoUrl.png",
              }
            }
            style={
              Array [
                Object {
                  "height": 76,
                  "width": 76,
                },
                Object {
                  "borderRadius": 38,
                },
              ]
            }
            testID={undefined}
          />
        </View>
      </View>
      <Text
        accessibilityLabel="send-proof-message"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 15,
            },
            Object {
              "fontFamily": "Lato",
            },
            Object {
              "backgroundColor": "#ffffff",
              "color": "#777777",
            },
            Object {
              "fontWeight": "600",
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            Object {
              "marginBottom": 5,
              "paddingTop": 10,
            },
          ]
        }
        testID="send-proof-message"
      >
        Sending Proof to
      </Text>
      <Text
        accessibilityLabel="proof-verify-name"
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "fontSize": 17,
            },
            Object {
              "fontFamily": "Lato",
            },
            Object {
              "backgroundColor": "#ffffff",
              "color": "#777777",
            },
            Object {
              "fontWeight": "bold",
            },
            Object {
              "textAlign": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            Object {
              "marginBottom": 10,
            },
          ]
        }
        testID="proof-verify-name"
      >
        Test Issuer
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
          Object {
            "marginLeft": 0,
            "marginRight": 0,
          },
          undefined,
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel="send-proof-success-continue"
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            undefined,
          ]
        }
        testID="send-proof-success-continue"
        tvParallaxProperties={undefined}
      >
        <View
          pointerEvents="box-only"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#9E9E9E",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 19,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "backgroundColor": "#ffffff",
              },
              undefined,
              Object {
                "padding": 12,
              },
              undefined,
              undefined,
              undefined,
              Array [
                null,
              ],
              Object {
                "backgroundColor": "#dadee0",
              },
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                },
                Object {
                  "opacity": 0.4,
                },
              ],
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  },
                  Object {
                    "color": "#4A8FE3",
                  },
                  Object {
                    "fontSize": 14,
                  },
                  undefined,
                  Object {
                    "fontWeight": "bold",
                  },
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            Continue
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
